#!/usr/bin/env ruby

require "date_named_file"
require "hathifiles_database"
require "dotenv"
require "date"

HF_FILES = "/htapps/archive/hathifiles"
LOGFILE_DIR = "../logs/hathifiles_database"

def usage
  puts "

  Usage:
      ruby #{__FILE__} <start_date_or_keyword> <'dev' or 'production'>
  e.g ruby #{__FILE__} 20211101 production
      ruby #{__FILE__} first_of_month dev # or just 'fom'
      ruby #{__FILE__} yesterday production

   "
  exit 1
end

usage if ARGV.size != 2

devprod = ARGV[1].downcase
envfilename = case devprod.downcase
when "dev"
  ".devenv"
when "prod"
  ".env"
else
  puts "\nUnknown target '#{devprod}'"
  usage
  exit 1
end
envfile = Pathname.new(__dir__).parent + envfilename

start_date = ARGV[0].downcase
today = DateTime.now
if %w[fom first_of_month].include? start_date
  start_date = today - today.day + 1
elsif %w[yesterday].include? start_date
  start_date = today - 1
end

Dotenv.load(envfile)

connection_string = ENV["HATHIFILES_MYSQL_CONNECTION"]
connection = HathifilesDatabase.new(connection_string)

connection.logger.info "Connecting to #{connection_string}"

template = DateNamedFile.new "#{HF_FILES}/hathi_upd_%Y%m%d.txt.gz"
files = template.daily_through_yesterday(start_date)

files.each do |f|
  connection.logger.info "Starting work on #{f}"
  connection.update_from_file f
end


__END__

require 'pathname'
require 'tty-prompt'


filename = ARGV[0]
tempdir = Pathname.new('.').realdirpath + 'tmp'

prompt = TTY::Prompt.new


p

#!/bin/bash

PATH=/l/local/rbenv/shims:/l/local/rbenv/bin:$PATH
HF_FILES=/htapps/archive/hathifiles
LOGFILE=../logs/hathifiles_database/20210304catchup

# DEV=""
DEV="dev"



#bundle exec ruby exe/hathifiles_database_full $HF_FILES/hathi_full_20200801.txt.gz > $LOGFILE 2>&1
#bundle exec ruby exe/hathifiles_database_update $HF_FILES/hathi_upd_20200731.txt.gz >> $LOGFILE 2>&1;

for i in 01 02 03 04; do
    SOURCEFILE=$HF_FILES/hathi_upd_202103${i}.txt.gz;
    bundle exec ruby exe/hathifiles_database_update $SOURCEFILE $DEV >> $LOGFILE 2>&1;
done

    

