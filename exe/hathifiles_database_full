#!/usr/bin/env ruby

# Updates the hf family of database tables with a full monthly hathifile.
# Tries to avoid disruption and thrashing by computing a delta using the
# current monthly hathifile and the state of the database and diffing
# two derivative files (database dumps rather than hathifiles) based on
# the current hf table and the hathifile to be inserted.

# By sorting and comparing these dumps we arrive at an "updates" file
# and a "deletes" file which are submitted as the `delta` parameter to
# `HathifilesDatabase::DB::Connection#update_from_file`

$:.unshift "../lib"

require "dotenv"
require "pathname"
require "tmpdir"

require "hathifiles_database/monthly_update"

envfile = Pathname.new(__dir__).parent + ".env"
Dotenv.load(envfile)

# Use the monthly hathifile from command line
hathifile = ARGV[0]
# Fall back to the most recent monthly hathifile if not specified
if hathifile.nil?
  hathifile = Dir.glob(File.join(ENV["HATHIFILES_DIR"], "hathi_full*")).max
end

connection = HathifilesDatabase.new(ENV["HATHIFILES_MYSQL_CONNECTION"])
Dir.mktmpdir do |tempdir|
  monthly = HathifilesDatabase::MonthlyUpdate.new(connection: connection, hathifile: hathifile, output_directory: tempdir)
  monthly.run
end
