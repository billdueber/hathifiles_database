#!/usr/bin/env ruby

require 'date_named_file'
require 'hathifiles_database'
require 'dotenv'

HF_FILES = '/htapps/archive/hathifiles'
LOGFILE_DIR ='../logs/hathifiles_database'

envfile =    Pathname.new(__dir__).parent + '.env'
devenvfile = Pathname.new(__dir__).parent + '.devenv'

Dotenv.load(envfile)
connection_string = ENV['HATHIFILES_MYSQL_CONNECTION']
connection = HathifilesDatabase.new(connection_string)

production = connection.rawdb

Dotenv.load(envfile)
connection_string = ENV['HATHIFILES_MYSQL_CONNECTION']
reindex_connection = HathifilesDatabase.new(connection_string)

reindex = reindex_connection.rawdb

def prod(t)
  "hathifiles.#{t}"
end

def tmp(t)
  "hathifiles.#{t}_swap"
end

def ri(t)
  "hathifiles_reindex.#{t}"
end


# Get tables that are in both
tables = production.tables.intersection(reindex.tables)

renames = tables.flat_map{|t| [[prod(t), tmp(t)], [ri(t), prod(t)], [tmp(t), ri(t)]]}
sql = "RENAME TABLE " + renames.map{|x| x.join(" TO ")}.join(', ')

production.run(sql)

__END__

require 'pathname'
require 'tty-prompt'


filename = ARGV[0]
tempdir = Pathname.new('.').realdirpath + 'tmp'

prompt = TTY::Prompt.new


p

#!/bin/bash

PATH=/l/local/rbenv/shims:/l/local/rbenv/bin:$PATH
HF_FILES=/htapps/archive/hathifiles
LOGFILE=../logs/hathifiles_database/20210304catchup

# DEV=""
DEV="dev"



#bundle exec ruby exe/hathifiles_database_full $HF_FILES/hathi_full_20200801.txt.gz > $LOGFILE 2>&1
#bundle exec ruby exe/hathifiles_database_update $HF_FILES/hathi_upd_20200731.txt.gz >> $LOGFILE 2>&1;

for i in 01 02 03 04; do
    SOURCEFILE=$HF_FILES/hathi_upd_202103${i}.txt.gz;
    bundle exec ruby exe/hathifiles_database_update $SOURCEFILE $DEV >> $LOGFILE 2>&1;
done

    

